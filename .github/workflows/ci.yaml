name: Race Monitor CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  schedule:
    # Daily build at midnight UTC
    - cron: "0 0 * * *"

env:
  ROS_DISTRO: humble
  # Common ROS2 packages needed across jobs
  ROS2_DEPS: >-
    ros-humble-ament-cmake
    ros-humble-ament-cmake-python  
    ros-humble-rclpy
    ros-humble-std-msgs
    ros-humble-nav-msgs
    ros-humble-geometry-msgs
    ros-humble-visualization-msgs
    ros-humble-ackermann-msgs
    ros-humble-tf2-ros
    ros-humble-tf-transformations

jobs:
  integration-test:
    name: ROS2 Integration Test
    runs-on: ubuntu-22.04
    container:
      image: ros:humble
      options: --user root

    steps:
      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y \
            git \
            python3-pip \
            python3-colcon-common-extensions \
            python3-rosdep \
            build-essential \
            curl \
            wget

      - name: Configure ROS2 environment
        run: |
          rosdep init || true
          rosdep update
          apt-get install -y ${{ env.ROS2_DEPS }} \
            ros-humble-launch \
            ros-humble-launch-ros
          source /opt/ros/humble/setup.bash

      - name: Clone repository
        run: |
          mkdir -p /workspace/src
          cd /workspace/src
          git clone --recursive https://github.com/GIU-F1Tenth/race_monitor.git
          cd race_monitor
          ls -la

      - name: Install Python dependencies
        run: |
          cd /workspace/src/race_monitor
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt

      - name: Build package
        run: |
          cd /workspace
          source /opt/ros/humble/setup.bash
          colcon build --packages-select race_monitor --cmake-args -DCMAKE_BUILD_TYPE=Release
          source install/setup.bash

      - name: Run tests
        run: |
          cd /workspace
          source /opt/ros/humble/setup.bash
          source install/setup.bash

          # Run colcon tests
          colcon test --packages-select race_monitor --event-handlers console_direct+ || echo "No colcon tests found"
          colcon test-result --verbose || echo "No test results to display"

          # Test package import
          python3 -c "
          try:
              import race_monitor
              print('Package import successful')
          except ImportError as e:
              print(f'Package import failed: {e}')
              exit(1)
          "

          # Test ROS2 imports
          python3 -c "
          try:
              import rclpy
              import std_msgs.msg
              import nav_msgs.msg
              import geometry_msgs.msg
              import visualization_msgs.msg
              import ackermann_msgs.msg
              import tf_transformations
              print('ROS2 imports successful')
          except ImportError as e:
              print(f'ROS2 import failed: {e}')
              exit(1)
          "

      - name: Test launch file
        run: |
          cd /workspace
          source /opt/ros/humble/setup.bash
          source install/setup.bash

          # Test launch system availability
          python3 -c "
          import sys
          import os
          sys.path.append('/workspace/src/race_monitor')
          try:
              from launch import LaunchDescription
              print('Launch system available')
          except ImportError as e:
              print(f'Launch system import failed: {e}')
              exit(1)
          "

          # Test launch execution
          timeout 15s bash -c '
            source /opt/ros/humble/setup.bash
            source install/setup.bash
            ros2 launch race_monitor race_monitor.launch.py &
            LAUNCH_PID=$!
            
            sleep 5
            
            if kill -0 $LAUNCH_PID 2>/dev/null; then
              echo "Launch file executed successfully"
              if ros2 node list | grep -q race_monitor; then
                echo "Node is active in ROS2 network"
              else
                echo "Warning: Node not found in ros2 node list"
              fi
              kill $LAUNCH_PID
              exit 0
            else
              echo "Launch file failed to start"
              exit 1
            fi
          ' || (echo "Launch test failed" && exit 1)

      - name: Test node executable
        run: |
          cd /workspace
          source /opt/ros/humble/setup.bash
          source install/setup.bash

          timeout 10s bash -c '
            ros2 run race_monitor race_monitor &
            NODE_PID=$!
            
            sleep 3
            
            if kill -0 $NODE_PID 2>/dev/null; then
              echo "Node executable started successfully"
              if ros2 node list | grep -q race_monitor; then
                echo "Node is visible to ROS2"
              fi
              kill $NODE_PID
              exit 0
            else
              echo "Node executable failed"
              exit 1
            fi
          ' || echo "Node executable test completed"

  python-lint:
    name: Python Code Quality
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov mypy flake8

      - name: Lint with flake8
        run: |
          flake8 race_monitor/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 race_monitor/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Type check with mypy
        run: |
          mypy --ignore-missing-imports race_monitor/
